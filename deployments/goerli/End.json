{
  "address": "0x5DcbF28D7D323Ab4Cebc3a3F2187325e9706e768",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Cage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        }
      ],
      "name": "Cage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Cash",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "Deny",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "what",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "File",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "what",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "data",
          "type": "address"
        }
      ],
      "name": "File",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        }
      ],
      "name": "Flow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ink",
          "type": "uint256"
        }
      ],
      "name": "Free",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Pack",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "Rely",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "urn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "art",
          "type": "uint256"
        }
      ],
      "name": "Skim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tab",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "art",
          "type": "uint256"
        }
      ],
      "name": "Skip",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tab",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "art",
          "type": "uint256"
        }
      ],
      "name": "Snip",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Thaw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "Art",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        }
      ],
      "name": "cage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "cash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cat",
      "outputs": [
        {
          "internalType": "contract CatLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cure",
      "outputs": [
        {
          "internalType": "contract CureLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "deny",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dog",
      "outputs": [
        {
          "internalType": "contract DogLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "what",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "file",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "what",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "data",
          "type": "address"
        }
      ],
      "name": "file",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "fix",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        }
      ],
      "name": "flow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        }
      ],
      "name": "free",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "gap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "live",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "out",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "pack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pot",
      "outputs": [
        {
          "internalType": "contract PotLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        }
      ],
      "name": "rely",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "urn",
          "type": "address"
        }
      ],
      "name": "skim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ilk",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "snip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "spot",
      "outputs": [
        {
          "internalType": "contract SpotLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thaw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vat",
      "outputs": [
        {
          "internalType": "contract VatLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vow",
      "outputs": [
        {
          "internalType": "contract VowLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wait",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "when",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1fce94c1233d47a20bb6ee360ffda0f6dd98de3197529fb1642bb2765adce1d3",
  "receipt": {
    "to": null,
    "from": "0x76677d82Cba9d7F2BB40670456AbaD808778635c",
    "contractAddress": "0x5DcbF28D7D323Ab4Cebc3a3F2187325e9706e768",
    "transactionIndex": 43,
    "gasUsed": "3794437",
    "logsBloom": "0x
    "blockHash": "0x21291d01caf3fce3379fc4370d63dc310889519867cad6ddfa7b2c49e9efa22d",
    "transactionHash": "0x1fce94c1233d47a20bb6ee360ffda0f6dd98de3197529fb1642bb2765adce1d3",
    "logs": [
      {
        "transactionIndex": 43,
        "blockNumber": 8378781,
        "transactionHash": "0x1fce94c1233d47a20bb6ee360ffda0f6dd98de3197529fb1642bb2765adce1d3",
        "address": "0x5DcbF28D7D323Ab4Cebc3a3F2187325e9706e768",
        "topics": [
          "0xdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a60",
          "0x00000000000000000000000076677d82cba9d7f2bb40670456abad808778635c"
        ],
        "data": "0x",
        "logIndex": 113,
        "blockHash": "0x21291d01caf3fce3379fc4370d63dc310889519867cad6ddfa7b2c49e9efa22d"
      }
    ],
    "blockNumber": 8378781,
    "cumulativeGasUsed": "14891584",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ed048294ed74b7abd11bdebd540fd1ff",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Cage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"Cage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Cash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Deny\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"File\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"Flow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ink\",\"type\":\"uint256\"}],\"name\":\"Free\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Pack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Rely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"urn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"art\",\"type\":\"uint256\"}],\"name\":\"Skim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tab\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"art\",\"type\":\"uint256\"}],\"name\":\"Skip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tab\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"art\",\"type\":\"uint256\"}],\"name\":\"Snip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Thaw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"Art\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"cage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"cash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cat\",\"outputs\":[{\"internalType\":\"contract CatLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cure\",\"outputs\":[{\"internalType\":\"contract CureLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dog\",\"outputs\":[{\"internalType\":\"contract DogLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"what\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"data\",\"type\":\"address\"}],\"name\":\"file\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"fix\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"flow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"}],\"name\":\"free\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"gap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"live\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"out\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pot\",\"outputs\":[{\"internalType\":\"contract PotLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"urn\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ilk\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"snip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spot\",\"outputs\":[{\"internalType\":\"contract SpotLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thaw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vat\",\"outputs\":[{\"internalType\":\"contract VatLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vow\",\"outputs\":[{\"internalType\":\"contract VowLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wait\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"when\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/end.sol\":\"End\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/end.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\n/// end.sol -- global settlement engine\\n\\n// Copyright (C) 2018 Rain <rainbreak@riseup.net>\\n// Copyright (C) 2018 Lev Livnev <lev@liv.nev.org.uk>\\n// Copyright (C) 2020-2021 Dai Foundation\\n//\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU Affero General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU Affero General Public License for more details.\\n//\\n// You should have received a copy of the GNU Affero General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\npragma solidity ^0.6.12;\\n\\ninterface VatLike {\\n    function dai(address) external view returns (uint256);\\n    function ilks(bytes32 ilk) external returns (\\n        uint256 Art,   // [wad]\\n        uint256 rate,  // [ray]\\n        uint256 spot,  // [ray]\\n        uint256 line,  // [rad]\\n        uint256 dust   // [rad]\\n    );\\n    function urns(bytes32 ilk, address urn) external returns (\\n        uint256 ink,   // [wad]\\n        uint256 art    // [wad]\\n    );\\n    function debt() external returns (uint256);\\n    function move(address src, address dst, uint256 rad) external;\\n    function hope(address) external;\\n    function flux(bytes32 ilk, address src, address dst, uint256 rad) external;\\n    function grab(bytes32 i, address u, address v, address w, int256 dink, int256 dart) external;\\n    function suck(address u, address v, uint256 rad) external;\\n    function cage() external;\\n}\\n\\ninterface CatLike {\\n    function ilks(bytes32) external returns (\\n        address flip,\\n        uint256 chop,  // [ray]\\n        uint256 lump   // [rad]\\n    );\\n    function cage() external;\\n}\\n\\ninterface DogLike {\\n    function ilks(bytes32) external returns (\\n        address clip,\\n        uint256 chop,\\n        uint256 hole,\\n        uint256 dirt\\n    );\\n    function cage() external;\\n}\\n\\ninterface PotLike {\\n    function cage() external;\\n}\\n\\ninterface VowLike {\\n    function cage() external;\\n}\\n\\ninterface FlipLike {\\n    function bids(uint256 id) external view returns (\\n        uint256 bid,   // [rad]\\n        uint256 lot,   // [wad]\\n        address guy,\\n        uint48  tic,   // [unix epoch time]\\n        uint48  end,   // [unix epoch time]\\n        address usr,\\n        address gal,\\n        uint256 tab    // [rad]\\n    );\\n    function yank(uint256 id) external;\\n}\\n\\ninterface ClipLike {\\n    function sales(uint256 id) external view returns (\\n        uint256 pos,\\n        uint256 tab,\\n        uint256 lot,\\n        address usr,\\n        uint96  tic,\\n        uint256 top\\n    );\\n    function yank(uint256 id) external;\\n}\\n\\ninterface PipLike {\\n    function read() external view returns (bytes32);\\n}\\n\\ninterface SpotLike {\\n    function par() external view returns (uint256);\\n    function ilks(bytes32) external view returns (\\n        PipLike pip,\\n        uint256 mat    // [ray]\\n    );\\n    function cage() external;\\n}\\n\\ninterface CureLike {\\n    function tell() external view returns (uint256);\\n    function cage() external;\\n}\\n\\n/*\\n    This is the `End` and it coordinates Global Settlement. This is an\\n    involved, stateful process that takes place over nine steps.\\n\\n    First we freeze the system and lock the prices for each ilk.\\n\\n    1. `cage()`:\\n        - freezes user entrypoints\\n        - cancels flop/flap auctions\\n        - starts cooldown period\\n        - stops pot drips\\n\\n    2. `cage(ilk)`:\\n       - set the cage price for each `ilk`, reading off the price feed\\n\\n    We must process some system state before it is possible to calculate\\n    the final dai / collateral price. In particular, we need to determine\\n\\n      a. `gap`, the collateral shortfall per collateral type by\\n         considering under-collateralised CDPs.\\n\\n      b. `debt`, the outstanding dai supply after including system\\n         surplus / deficit\\n\\n    We determine (a) by processing all under-collateralised CDPs with\\n    `skim`:\\n\\n    3. `skim(ilk, urn)`:\\n       - cancels CDP debt\\n       - any excess collateral remains\\n       - backing collateral taken\\n\\n    We determine (b) by processing ongoing dai generating processes,\\n    i.e. auctions. We need to ensure that auctions will not generate any\\n    further dai income.\\n\\n    In the two-way auction model (Flipper) this occurs when\\n    all auctions are in the reverse (`dent`) phase. There are two ways\\n    of ensuring this:\\n\\n    4a. i) `wait`: set the cooldown period to be at least as long as the\\n           longest auction duration, which needs to be determined by the\\n           cage administrator.\\n\\n           This takes a fairly predictable time to occur but with altered\\n           auction dynamics due to the now varying price of dai.\\n\\n       ii) `skip`: cancel all ongoing auctions and seize the collateral.\\n\\n           This allows for faster processing at the expense of more\\n           processing calls. This option allows dai holders to retrieve\\n           their collateral faster.\\n\\n           `skip(ilk, id)`:\\n            - cancel individual flip auctions in the `tend` (forward) phase\\n            - retrieves collateral and debt (including penalty) to owner's CDP\\n            - returns dai to last bidder\\n            - `dent` (reverse) phase auctions can continue normally\\n\\n    Option (i), `wait`, is sufficient (if all auctions were bidded at least\\n    once) for processing the system settlement but option (ii), `skip`,\\n    will speed it up. Both options are available in this implementation,\\n    with `skip` being enabled on a per-auction basis.\\n\\n    In the case of the Dutch Auctions model (Clipper) they keep recovering\\n    debt during the whole lifetime and there isn't a max duration time\\n    guaranteed for the auction to end.\\n    So the way to ensure the protocol will not receive extra dai income is:\\n\\n    4b. i) `snip`: cancel all ongoing auctions and seize the collateral.\\n\\n           `snip(ilk, id)`:\\n            - cancel individual running clip auctions\\n            - retrieves remaining collateral and debt (including penalty)\\n              to owner's CDP\\n\\n    When a CDP has been processed and has no debt remaining, the\\n    remaining collateral can be removed.\\n\\n    5. `free(ilk)`:\\n        - remove collateral from the caller's CDP\\n        - owner can call as needed\\n\\n    After the processing period has elapsed, we enable calculation of\\n    the final price for each collateral type.\\n\\n    6. `thaw()`:\\n       - only callable after processing time period elapsed\\n       - assumption that all under-collateralised CDPs are processed\\n       - fixes the total outstanding supply of dai\\n       - may also require extra CDP processing to cover vow surplus\\n\\n    7. `flow(ilk)`:\\n        - calculate the `fix`, the cash price for a given ilk\\n        - adjusts the `fix` in the case of deficit / surplus\\n\\n    At this point we have computed the final price for each collateral\\n    type and dai holders can now turn their dai into collateral. Each\\n    unit dai can claim a fixed basket of collateral.\\n\\n    Dai holders must first `pack` some dai into a `bag`. Once packed,\\n    dai cannot be unpacked and is not transferrable. More dai can be\\n    added to a bag later.\\n\\n    8. `pack(wad)`:\\n        - put some dai into a bag in preparation for `cash`\\n\\n    Finally, collateral can be obtained with `cash`. The bigger the bag,\\n    the more collateral can be released.\\n\\n    9. `cash(ilk, wad)`:\\n        - exchange some dai from your bag for gems from a specific ilk\\n        - the number of gems is limited by how big your bag is\\n*/\\n\\ncontract End {\\n    // --- Auth ---\\n    mapping (address => uint256) public wards;\\n    function rely(address usr) external auth { wards[usr] = 1; emit Rely(usr); }\\n    function deny(address usr) external auth { wards[usr] = 0; emit Deny(usr); }\\n    modifier auth {\\n        require(wards[msg.sender] == 1, \\\"End/not-authorized\\\");\\n        _;\\n    }\\n\\n    // --- Data ---\\n    VatLike  public vat;   // CDP Engine\\n    CatLike  public cat;\\n    DogLike  public dog;\\n    VowLike  public vow;   // Debt Engine\\n    PotLike  public pot;\\n    SpotLike public spot;\\n    CureLike public cure;\\n\\n    uint256  public live;  // Active Flag\\n    uint256  public when;  // Time of cage                   [unix epoch time]\\n    uint256  public wait;  // Processing Cooldown Length             [seconds]\\n    uint256  public debt;  // Total outstanding dai following processing [rad]\\n\\n    mapping (bytes32 => uint256) public tag;  // Cage price              [ray]\\n    mapping (bytes32 => uint256) public gap;  // Collateral shortfall    [wad]\\n    mapping (bytes32 => uint256) public Art;  // Total debt per ilk      [wad]\\n    mapping (bytes32 => uint256) public fix;  // Final cash price        [ray]\\n\\n    mapping (address => uint256)                      public bag;  //    [wad]\\n    mapping (bytes32 => mapping (address => uint256)) public out;  //    [wad]\\n\\n    // --- Events ---\\n    event Rely(address indexed usr);\\n    event Deny(address indexed usr);\\n\\n    event File(bytes32 indexed what, uint256 data);\\n    event File(bytes32 indexed what, address data);\\n\\n    event Cage();\\n    event Cage(bytes32 indexed ilk);\\n    event Snip(bytes32 indexed ilk, uint256 indexed id, address indexed usr, uint256 tab, uint256 lot, uint256 art);\\n    event Skip(bytes32 indexed ilk, uint256 indexed id, address indexed usr, uint256 tab, uint256 lot, uint256 art);\\n    event Skim(bytes32 indexed ilk, address indexed urn, uint256 wad, uint256 art);\\n    event Free(bytes32 indexed ilk, address indexed usr, uint256 ink);\\n    event Thaw();\\n    event Flow(bytes32 indexed ilk);\\n    event Pack(address indexed usr, uint256 wad);\\n    event Cash(bytes32 indexed ilk, address indexed usr, uint256 wad);\\n\\n    // --- Init ---\\n    constructor() public {\\n        wards[msg.sender] = 1;\\n        live = 1;\\n        emit Rely(msg.sender);\\n    }\\n\\n    // --- Math ---\\n    uint256 constant WAD = 10 ** 18;\\n    uint256 constant RAY = 10 ** 27;\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = x + y;\\n        require(z >= x);\\n    }\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(y == 0 || (z = x * y) / y == x);\\n    }\\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        return x <= y ? x : y;\\n    }\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, y) / RAY;\\n    }\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = mul(x, WAD) / y;\\n    }\\n\\n    // --- Administration ---\\n    function file(bytes32 what, address data) external auth {\\n        require(live == 1, \\\"End/not-live\\\");\\n        if (what == \\\"vat\\\")  vat = VatLike(data);\\n        else if (what == \\\"cat\\\")   cat = CatLike(data);\\n        else if (what == \\\"dog\\\")   dog = DogLike(data);\\n        else if (what == \\\"vow\\\")   vow = VowLike(data);\\n        else if (what == \\\"pot\\\")   pot = PotLike(data);\\n        else if (what == \\\"spot\\\") spot = SpotLike(data);\\n        else if (what == \\\"cure\\\") cure = CureLike(data);\\n        else revert(\\\"End/file-unrecognized-param\\\");\\n        emit File(what, data);\\n    }\\n    function file(bytes32 what, uint256 data) external auth {\\n        require(live == 1, \\\"End/not-live\\\");\\n        if (what == \\\"wait\\\") wait = data;\\n        else revert(\\\"End/file-unrecognized-param\\\");\\n        emit File(what, data);\\n    }\\n\\n    // --- Settlement ---\\n    function cage() external auth {\\n        require(live == 1, \\\"End/not-live\\\");\\n        live = 0;\\n        when = block.timestamp;\\n        vat.cage();\\n        cat.cage();\\n        dog.cage();\\n        vow.cage();\\n        spot.cage();\\n        pot.cage();\\n        cure.cage();\\n        emit Cage();\\n    }\\n\\n    function cage(bytes32 ilk) external {\\n        require(live == 0, \\\"End/still-live\\\");\\n        require(tag[ilk] == 0, \\\"End/tag-ilk-already-defined\\\");\\n        (Art[ilk],,,,) = vat.ilks(ilk);\\n        (PipLike pip,) = spot.ilks(ilk);\\n        // par is a ray, pip returns a wad\\n        tag[ilk] = wdiv(spot.par(), uint256(pip.read()));\\n        emit Cage(ilk);\\n    }\\n\\n    function snip(bytes32 ilk, uint256 id) external {\\n        require(tag[ilk] != 0, \\\"End/tag-ilk-not-defined\\\");\\n\\n        (address _clip,,,) = dog.ilks(ilk);\\n        ClipLike clip = ClipLike(_clip);\\n        (, uint256 rate,,,) = vat.ilks(ilk);\\n        (, uint256 tab, uint256 lot, address usr,,) = clip.sales(id);\\n\\n        vat.suck(address(vow), address(vow),  tab);\\n        clip.yank(id);\\n\\n        uint256 art = tab / rate;\\n        Art[ilk] = add(Art[ilk], art);\\n        require(int256(lot) >= 0 && int256(art) >= 0, \\\"End/overflow\\\");\\n        vat.grab(ilk, usr, address(this), address(vow), int256(lot), int256(art));\\n        emit Snip(ilk, id, usr, tab, lot, art);\\n    }\\n\\n    function skip(bytes32 ilk, uint256 id) external {\\n        require(tag[ilk] != 0, \\\"End/tag-ilk-not-defined\\\");\\n\\n        (address _flip,,) = cat.ilks(ilk);\\n        FlipLike flip = FlipLike(_flip);\\n        (, uint256 rate,,,) = vat.ilks(ilk);\\n        (uint256 bid, uint256 lot,,,, address usr,, uint256 tab) = flip.bids(id);\\n\\n        vat.suck(address(vow), address(vow),  tab);\\n        vat.suck(address(vow), address(this), bid);\\n        vat.hope(address(flip));\\n        flip.yank(id);\\n\\n        uint256 art = tab / rate;\\n        Art[ilk] = add(Art[ilk], art);\\n        require(int256(lot) >= 0 && int256(art) >= 0, \\\"End/overflow\\\");\\n        vat.grab(ilk, usr, address(this), address(vow), int256(lot), int256(art));\\n        emit Skip(ilk, id, usr, tab, lot, art);\\n    }\\n\\n    function skim(bytes32 ilk, address urn) external {\\n        require(tag[ilk] != 0, \\\"End/tag-ilk-not-defined\\\");\\n        (, uint256 rate,,,) = vat.ilks(ilk);\\n        (uint256 ink, uint256 art) = vat.urns(ilk, urn);\\n\\n        uint256 owe = rmul(rmul(art, rate), tag[ilk]);\\n        uint256 wad = min(ink, owe);\\n        gap[ilk] = add(gap[ilk], sub(owe, wad));\\n\\n        require(wad <= 2**255 && art <= 2**255, \\\"End/overflow\\\");\\n        vat.grab(ilk, urn, address(this), address(vow), -int256(wad), -int256(art));\\n        emit Skim(ilk, urn, wad, art);\\n    }\\n\\n    function free(bytes32 ilk) external {\\n        require(live == 0, \\\"End/still-live\\\");\\n        (uint256 ink, uint256 art) = vat.urns(ilk, msg.sender);\\n        require(art == 0, \\\"End/art-not-zero\\\");\\n        require(ink <= 2**255, \\\"End/overflow\\\");\\n        vat.grab(ilk, msg.sender, msg.sender, address(vow), -int256(ink), 0);\\n        emit Free(ilk, msg.sender, ink);\\n    }\\n\\n    function thaw() external {\\n        require(live == 0, \\\"End/still-live\\\");\\n        require(debt == 0, \\\"End/debt-not-zero\\\");\\n        require(vat.dai(address(vow)) == 0, \\\"End/surplus-not-zero\\\");\\n        require(block.timestamp >= add(when, wait), \\\"End/wait-not-finished\\\");\\n        debt = sub(vat.debt(), cure.tell());\\n        emit Thaw();\\n    }\\n    function flow(bytes32 ilk) external {\\n        require(debt != 0, \\\"End/debt-zero\\\");\\n        require(fix[ilk] == 0, \\\"End/fix-ilk-already-defined\\\");\\n\\n        (, uint256 rate,,,) = vat.ilks(ilk);\\n        uint256 wad = rmul(rmul(Art[ilk], rate), tag[ilk]);\\n        fix[ilk] = mul(sub(wad, gap[ilk]), RAY) / (debt / RAY);\\n        emit Flow(ilk);\\n    }\\n\\n    function pack(uint256 wad) external {\\n        require(debt != 0, \\\"End/debt-zero\\\");\\n        vat.move(msg.sender, address(vow), mul(wad, RAY));\\n        bag[msg.sender] = add(bag[msg.sender], wad);\\n        emit Pack(msg.sender, wad);\\n    }\\n    function cash(bytes32 ilk, uint256 wad) external {\\n        require(fix[ilk] != 0, \\\"End/fix-ilk-not-defined\\\");\\n        vat.flux(ilk, address(this), msg.sender, rmul(wad, fix[ilk]));\\n        out[ilk][msg.sender] = add(out[ilk][msg.sender], wad);\\n        require(out[ilk][msg.sender] <= bag[msg.sender], \\\"End/insufficient-bag-balance\\\");\\n        emit Cash(ilk, msg.sender, wad);\\n    }\\n}\\n\",\"keccak256\":\"0x3bad3c57cab8d6837b814c1d055008fe398c02698007d15c877e2a5e5ede53af\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060016008819055503373ffffffffffffffffffffffffffffffffffffffff167fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6060405160405180910390a261432c806100af6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806389ea45d31161010f578063d4e8be83116100a2578063e488181311610071578063e4881813146107d3578063e6ee62aa14610807578063ee6447b514610849578063fe8507c61461088b576101f0565b8063d4e8be83146106f7578063e1340a3d14610745578063e2702fdc14610787578063e2b0caef146107b5576101f0565b8063bf353dbb116100de578063bf353dbb146105db578063c3b3ad7f14610633578063c83062c614610667578063c939ebfc14610695576101f0565b806389ea45d3146104d35780639255f80914610521578063957aa58c146105795780639c52a7f114610597576101f0565b8063626cb3c511610187578063692450091161015657806369245009146104335780636ea425551461043d5780636f265b931461046b578063840782ed1461049f576101f0565b8063626cb3c51461035b57806363fad85e1461038f57806364bd7013146103d157806365fae35e146103ef576101f0565b80634a10eaa6116101c35780634a10eaa6146102b75780634ba2363a146102e5578063503ecf06146103195780635920375c14610351576101f0565b80630dca59c1146101f557806329ae81141461021357806336569e771461024b57806338c6de401461027f575b600080fd5b6101fd6108c3565b6040518082815260200191505060405180910390f35b6102496004803603604081101561022957600080fd5b8101908080359060200190929190803590602001909291905050506108c9565b005b610253610ad3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b56004803603604081101561029557600080fd5b810190808035906020019092919080359060200190929190505050610af9565b005b6102e3600480360360208110156102cd57600080fd5b81019080803590602001909291905050506111cb565b005b6102ed611485565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034f6004803603604081101561032f57600080fd5b8101908080359060200190929190803590602001909291905050506114ab565b005b610359611d1b565b005b61036361216d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103bb600480360360208110156103a557600080fd5b8101908080359060200190929190505050612193565b6040518082815260200191505060405180910390f35b6103d96121ab565b6040518082815260200191505060405180910390f35b6104316004803603602081101561040557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b1565b005b61043b6122ef565b005b6104696004803603602081101561045357600080fd5b81019080803590602001909291905050506127e6565b005b610473612a3c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a7612a62565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051f600480360360408110156104e957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a88565b005b6105636004803603602081101561053757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f86565b6040518082815260200191505060405180910390f35b610581612f9e565b6040518082815260200191505060405180910390f35b6105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fa4565b005b61061d600480360360208110156105f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130e2565b6040518082815260200191505060405180910390f35b61063b6130fa565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106936004803603602081101561067d57600080fd5b8101908080359060200190929190505050613120565b005b6106e1600480360360408110156106ab57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134f3565b6040518082815260200191505060405180910390f35b6107436004803603604081101561070d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613518565b005b6107716004803603602081101561075b57600080fd5b8101908080359060200190929190505050613a0c565b6040518082815260200191505060405180910390f35b6107b36004803603602081101561079d57600080fd5b8101908080359060200190929190505050613a24565b005b6107bd613e55565b6040518082815260200191505060405180910390f35b6107db613e5b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108336004803603602081101561081d57600080fd5b8101908080359060200190929190505050613e81565b6040518082815260200191505060405180910390f35b6108756004803603602081101561085f57600080fd5b8101908080359060200190929190505050613e99565b6040518082815260200191505060405180910390f35b6108c1600480360360408110156108a157600080fd5b810190808035906020019092919080359060200190929190505050613eb1565b005b600b5481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461097d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6001600854146109f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6e6f742d6c697665000000000000000000000000000000000000000081525060200191505060405180910390fd5b7f7761697400000000000000000000000000000000000000000000000000000000821415610a295780600a81905550610a97565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f66696c652d756e7265636f676e697a65642d706172616d000000000081525060200191505060405180910390fd5b817fe986e40cc8c151830d4f61050f4fb2e4add8567caad2d5f5496f9158e91fe4c7826040518082815260200191505060405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c6000848152602001908152602001600020541415610b83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f7461672d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36846040518263ffffffff1660e01b815260040180828152602001915050608060405180830381600087803b158015610bfa57600080fd5b505af1158015610c0e573d6000803e3d6000fd5b505050506040513d6080811015610c2457600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050905060008190506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36866040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b505050506040513d60a0811015610cfe57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060008060008473ffffffffffffffffffffffffffffffffffffffff1663b5f522f7886040518263ffffffff1660e01b81526004018082815260200191505060c06040518083038186803b158015610d9357600080fd5b505afa158015610da7573d6000803e3d6000fd5b505050506040513d60c0811015610dbd57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505093509350935050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f24e23eb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610efe57600080fd5b505af1158015610f12573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166326e027f1886040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610f6957600080fd5b505af1158015610f7d573d6000803e3d6000fd5b505050506000848481610f8c57fe5b049050610fac600e60008b8152602001908152602001600020548261422e565b600e60008b81526020019081526020016000208190555060008312158015610fd5575060008112155b611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f408a8430600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688876040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561114857600080fd5b505af115801561115c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16888a7ffc67e20caaffa015d51f696df8ea5c273ba269c69bdc2ec31c1334d01286eaa487878660405180848152602001838152602001828152602001935050505060405180910390a4505050505050505050565b6000600b541415611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f456e642f646562742d7a65726f0000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600f600083815260200190815260200160002054146112cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f6669782d696c6b2d616c72656164792d646566696e6564000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36836040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b15801561134457600080fd5b505af1158015611358573d6000803e3d6000fd5b505050506040513d60a081101561136e57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060006113e86113cf600e60008681526020019081526020016000205484614248565b600c600086815260200190815260200160002054614248565b90506b033b2e3c9fd0803ce8000000600b548161140157fe5b0461143461142283600d600088815260200190815260200160002054614271565b6b033b2e3c9fd0803ce800000061428b565b8161143b57fe5b04600f600085815260200190815260200160002081905550827f8d1d5ae676a6db1f6f14414f8a6c78941bbfb700fe3f3be6d3245f26c2f2d55060405160405180910390a2505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c6000848152602001908152602001600020541415611535576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f7461672d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36846040518263ffffffff1660e01b815260040180828152602001915050606060405180830381600087803b1580156115ac57600080fd5b505af11580156115c0573d6000803e3d6000fd5b505050506040513d60608110156115d657600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050505050905060008190506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36866040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b15801561167b57600080fd5b505af115801561168f573d6000803e3d6000fd5b505050506040513d60a08110156116a557600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506000806000808573ffffffffffffffffffffffffffffffffffffffff16634423c5f1896040518263ffffffff1660e01b8152600401808281526020019150506101006040518083038186803b15801561173c57600080fd5b505afa158015611750573d6000803e3d6000fd5b505050506040513d61010081101561176757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050975050965050505093509350600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f24e23eb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156118bf57600080fd5b505af11580156118d3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f24e23eb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156119aa57600080fd5b505af11580156119be573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3b22fc4876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611a4d57600080fd5b505af1158015611a61573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff166326e027f1896040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611ab857600080fd5b505af1158015611acc573d6000803e3d6000fd5b505050506000858281611adb57fe5b049050611afb600e60008c8152602001908152602001600020548261422e565b600e60008c81526020019081526020016000208190555060008412158015611b24575060008112155b611b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f408b8530600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689876040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b158015611c9757600080fd5b505af1158015611cab573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16898b7fbfa2310a8897203a59922debd0db38279196d8de5050df84608e2bb3e7790f6985888660405180848152602001838152602001828152602001935050505060405180910390a450505050505050505050565b600060085414611d93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f456e642f7374696c6c2d6c69766500000000000000000000000000000000000081525060200191505060405180910390fd5b6000600b5414611e0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f456e642f646562742d6e6f742d7a65726f00000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c25b346600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611eb857600080fd5b505afa158015611ecc573d6000803e3d6000fd5b505050506040513d6020811015611ee257600080fd5b810190808051906020019092919050505014611f66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f456e642f737572706c75732d6e6f742d7a65726f00000000000000000000000081525060200191505060405180910390fd5b611f74600954600a5461422e565b421015611fe9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f456e642f776169742d6e6f742d66696e6973686564000000000000000000000081525060200191505060405180910390fd5b612139600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630dca59c16040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561205657600080fd5b505af115801561206a573d6000803e3d6000fd5b505050506040513d602081101561208057600080fd5b8101908080519060200190929190505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166353d700e56040518163ffffffff1660e01b815260040160206040518083038186803b1580156120f957600080fd5b505afa15801561210d573d6000803e3d6000fd5b505050506040513d602081101561212357600080fd5b8101908080519060200190929190505050614271565b600b819055507f4df15159e645ba7d02cadde0bc937abef5ad0134623c00de50a31750b85978b960405160405180910390a1565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f6020528060005260406000206000915090505481565b600a5481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612265576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6060405160405180910390a250565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146123a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60016008541461241b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6e6f742d6c697665000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060088190555042600981905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561249457600080fd5b505af11580156124a8573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561251657600080fd5b505af115801561252a573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561259857600080fd5b505af11580156125ac573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561261a57600080fd5b505af115801561262e573d6000803e3d6000fd5b50505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561269c57600080fd5b505af11580156126b0573d6000803e3d6000fd5b50505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561271e57600080fd5b505af1158015612732573d6000803e3d6000fd5b50505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127a057600080fd5b505af11580156127b4573d6000803e3d6000fd5b505050507f2308ed18a14e800c39b86eb6ea43270105955ca385b603b64eca89f98ae8fbda60405160405180910390a1565b6000600b54141561285f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f456e642f646562742d7a65726f0000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b33600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166128d7856b033b2e3c9fd0803ce800000061428b565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561294757600080fd5b505af115801561295b573d6000803e3d6000fd5b505050506129a8601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261422e565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f47a981d8cbc0f6df64c9be4ce0a423071a088bd46c549bbd11a4d566e031fe0c826040518082815260200191505060405180910390a250565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c6000848152602001908152602001600020541415612b12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f7461672d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36846040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b158015612b8957600080fd5b505af1158015612b9d573d6000803e3d6000fd5b505050506040513d60a0811015612bb357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050915050600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632424be5c86866040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b158015612c8757600080fd5b505af1158015612c9b573d6000803e3d6000fd5b505050506040513d6040811015612cb157600080fd5b810190808051906020019092919080519060200190929190505050915091506000612cf8612cdf8386614248565b600c600089815260200190815260200160002054614248565b90506000612d0684836142b7565b9050612d2e600d600089815260200190815260200160002054612d298484614271565b61422e565b600d6000898152602001908152602001600020819055507f80000000000000000000000000000000000000000000000000000000000000008111158015612d9557507f80000000000000000000000000000000000000000000000000000000000000008311155b612e07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f40888830600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686600003896000036040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b158015612f0e57600080fd5b505af1158015612f22573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff16877fa05b7b56166c25efbac063da905f9ea6aa1dc5101f95b43c7a838aace979ab598386604051808381526020018281526020019250505060405180910390a350505050505050565b60106020528060005260406000206000915090505481565b60085481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414613058576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b60405160405180910390a250565b60006020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060085414613198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f456e642f7374696c6c2d6c69766500000000000000000000000000000000000081525060200191505060405180910390fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632424be5c84336040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b15801561322d57600080fd5b505af1158015613241573d6000803e3d6000fd5b505050506040513d604081101561325757600080fd5b81019080805190602001909291908051906020019092919050505091509150600081146132ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f456e642f6172742d6e6f742d7a65726f0000000000000000000000000000000081525060200191505060405180910390fd5b7f8000000000000000000000000000000000000000000000000000000000000000821115613382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f40843333600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760000360006040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561348757600080fd5b505af115801561349b573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff16837ff26f2b994a5e16f0960958e62541681f9e3e84d4caac2e487d25e0c75243f0d8846040518082815260200191505060405180910390a3505050565b6011602052816000526040600020602052806000526040600020600091509150505481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146135cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b600160085414613644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6e6f742d6c697665000000000000000000000000000000000000000081525060200191505060405180910390fd5b7f76617400000000000000000000000000000000000000000000000000000000008214156136b25780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139ba565b7f63617400000000000000000000000000000000000000000000000000000000008214156137205780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b9565b7f646f67000000000000000000000000000000000000000000000000000000000082141561378e5780600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b8565b7f766f7700000000000000000000000000000000000000000000000000000000008214156137fc5780600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b7565b7f706f74000000000000000000000000000000000000000000000000000000000082141561386a5780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b6565b7f73706f74000000000000000000000000000000000000000000000000000000008214156138d85780600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b5565b7f63757265000000000000000000000000000000000000000000000000000000008214156139465780600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b4565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f66696c652d756e7265636f676e697a65642d706172616d000000000081525060200191505060405180910390fd5b5b5b5b5b5b5b817f8fef588b5fc1afbf5b2f06c1a435d513f208da2e6704c3d8f0e0ec91167066ba82604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25050565b600e6020528060005260406000206000915090505481565b600060085414613a9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f456e642f7374696c6c2d6c69766500000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c60008381526020019081526020016000205414613b25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f7461672d696c6b2d616c72656164792d646566696e6564000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36826040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b158015613b9a57600080fd5b505af1158015613bae573d6000803e3d6000fd5b505050506040513d60a0811015613bc457600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505090919250909150905050600e600083815260200190815260200160002060008291905055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36836040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b158015613c9657600080fd5b505afa158015613caa573d6000803e3d6000fd5b505050506040513d6040811015613cc057600080fd5b810190808051906020019092919080519060200190929190505050509050613e0d600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663495d32cb6040518163ffffffff1660e01b815260040160206040518083038186803b158015613d4957600080fd5b505afa158015613d5d573d6000803e3d6000fd5b505050506040513d6020811015613d7357600080fd5b81019080805190602001909291905050508273ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b815260040160206040518083038186803b158015613dca57600080fd5b505afa158015613dde573d6000803e3d6000fd5b505050506040513d6020811015613df457600080fd5b810190808051906020019092919050505060001c6142d1565b600c600084815260200190815260200160002081905550817f4a9efa0a0e3f548761a6924fe06ac5cb94ecdbc08b10d855bbcc04e37c4910db60405160405180910390a25050565b60095481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d6020528060005260406000206000915090505481565b600c6020528060005260406000206000915090505481565b6000600f6000848152602001908152602001600020541415613f3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f6669782d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636111be2e833033613f9986600f60008a815260200190815260200160002054614248565b6040518563ffffffff1660e01b8152600401808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b15801561401057600080fd5b505af1158015614024573d6000803e3d6000fd5b505050506140826011600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261422e565b6011600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546011600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156141db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f456e642f696e73756666696369656e742d6261672d62616c616e63650000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16827f888c7c01b06fd8004523e2bc9a274be1feaa9f03579ae5f568061dac078793c9836040518082815260200191505060405180910390a35050565b600081830190508281101561424257600080fd5b92915050565b60006b033b2e3c9fd0803ce8000000614261848461428b565b8161426857fe5b04905092915050565b600082828403915081111561428557600080fd5b92915050565b6000808214806142a857508282838502925082816142a557fe5b04145b6142b157600080fd5b92915050565b6000818311156142c757816142c9565b825b905092915050565b6000816142e684670de0b6b3a764000061428b565b816142ed57fe5b0490509291505056fea2646970667358221220a7265e7b8b16c215cf59231317ccb14298ec846bdc163aa083b83828b391e04064736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c806389ea45d31161010f578063d4e8be83116100a2578063e488181311610071578063e4881813146107d3578063e6ee62aa14610807578063ee6447b514610849578063fe8507c61461088b576101f0565b8063d4e8be83146106f7578063e1340a3d14610745578063e2702fdc14610787578063e2b0caef146107b5576101f0565b8063bf353dbb116100de578063bf353dbb146105db578063c3b3ad7f14610633578063c83062c614610667578063c939ebfc14610695576101f0565b806389ea45d3146104d35780639255f80914610521578063957aa58c146105795780639c52a7f114610597576101f0565b8063626cb3c511610187578063692450091161015657806369245009146104335780636ea425551461043d5780636f265b931461046b578063840782ed1461049f576101f0565b8063626cb3c51461035b57806363fad85e1461038f57806364bd7013146103d157806365fae35e146103ef576101f0565b80634a10eaa6116101c35780634a10eaa6146102b75780634ba2363a146102e5578063503ecf06146103195780635920375c14610351576101f0565b80630dca59c1146101f557806329ae81141461021357806336569e771461024b57806338c6de401461027f575b600080fd5b6101fd6108c3565b6040518082815260200191505060405180910390f35b6102496004803603604081101561022957600080fd5b8101908080359060200190929190803590602001909291905050506108c9565b005b610253610ad3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b56004803603604081101561029557600080fd5b810190808035906020019092919080359060200190929190505050610af9565b005b6102e3600480360360208110156102cd57600080fd5b81019080803590602001909291905050506111cb565b005b6102ed611485565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034f6004803603604081101561032f57600080fd5b8101908080359060200190929190803590602001909291905050506114ab565b005b610359611d1b565b005b61036361216d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103bb600480360360208110156103a557600080fd5b8101908080359060200190929190505050612193565b6040518082815260200191505060405180910390f35b6103d96121ab565b6040518082815260200191505060405180910390f35b6104316004803603602081101561040557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b1565b005b61043b6122ef565b005b6104696004803603602081101561045357600080fd5b81019080803590602001909291905050506127e6565b005b610473612a3c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a7612a62565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051f600480360360408110156104e957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a88565b005b6105636004803603602081101561053757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f86565b6040518082815260200191505060405180910390f35b610581612f9e565b6040518082815260200191505060405180910390f35b6105d9600480360360208110156105ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fa4565b005b61061d600480360360208110156105f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130e2565b6040518082815260200191505060405180910390f35b61063b6130fa565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106936004803603602081101561067d57600080fd5b8101908080359060200190929190505050613120565b005b6106e1600480360360408110156106ab57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134f3565b6040518082815260200191505060405180910390f35b6107436004803603604081101561070d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613518565b005b6107716004803603602081101561075b57600080fd5b8101908080359060200190929190505050613a0c565b6040518082815260200191505060405180910390f35b6107b36004803603602081101561079d57600080fd5b8101908080359060200190929190505050613a24565b005b6107bd613e55565b6040518082815260200191505060405180910390f35b6107db613e5b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108336004803603602081101561081d57600080fd5b8101908080359060200190929190505050613e81565b6040518082815260200191505060405180910390f35b6108756004803603602081101561085f57600080fd5b8101908080359060200190929190505050613e99565b6040518082815260200191505060405180910390f35b6108c1600480360360408110156108a157600080fd5b810190808035906020019092919080359060200190929190505050613eb1565b005b600b5481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461097d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b6001600854146109f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6e6f742d6c697665000000000000000000000000000000000000000081525060200191505060405180910390fd5b7f7761697400000000000000000000000000000000000000000000000000000000821415610a295780600a81905550610a97565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f66696c652d756e7265636f676e697a65642d706172616d000000000081525060200191505060405180910390fd5b817fe986e40cc8c151830d4f61050f4fb2e4add8567caad2d5f5496f9158e91fe4c7826040518082815260200191505060405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c6000848152602001908152602001600020541415610b83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f7461672d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36846040518263ffffffff1660e01b815260040180828152602001915050608060405180830381600087803b158015610bfa57600080fd5b505af1158015610c0e573d6000803e3d6000fd5b505050506040513d6080811015610c2457600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050905060008190506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36866040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b158015610cd457600080fd5b505af1158015610ce8573d6000803e3d6000fd5b505050506040513d60a0811015610cfe57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060008060008473ffffffffffffffffffffffffffffffffffffffff1663b5f522f7886040518263ffffffff1660e01b81526004018082815260200191505060c06040518083038186803b158015610d9357600080fd5b505afa158015610da7573d6000803e3d6000fd5b505050506040513d60c0811015610dbd57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505093509350935050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f24e23eb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610efe57600080fd5b505af1158015610f12573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166326e027f1886040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610f6957600080fd5b505af1158015610f7d573d6000803e3d6000fd5b505050506000848481610f8c57fe5b049050610fac600e60008b8152602001908152602001600020548261422e565b600e60008b81526020019081526020016000208190555060008312158015610fd5575060008112155b611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f408a8430600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688876040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561114857600080fd5b505af115801561115c573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16888a7ffc67e20caaffa015d51f696df8ea5c273ba269c69bdc2ec31c1334d01286eaa487878660405180848152602001838152602001828152602001935050505060405180910390a4505050505050505050565b6000600b541415611244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f456e642f646562742d7a65726f0000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600f600083815260200190815260200160002054146112cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f6669782d696c6b2d616c72656164792d646566696e6564000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36836040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b15801561134457600080fd5b505af1158015611358573d6000803e3d6000fd5b505050506040513d60a081101561136e57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505091505060006113e86113cf600e60008681526020019081526020016000205484614248565b600c600086815260200190815260200160002054614248565b90506b033b2e3c9fd0803ce8000000600b548161140157fe5b0461143461142283600d600088815260200190815260200160002054614271565b6b033b2e3c9fd0803ce800000061428b565b8161143b57fe5b04600f600085815260200190815260200160002081905550827f8d1d5ae676a6db1f6f14414f8a6c78941bbfb700fe3f3be6d3245f26c2f2d55060405160405180910390a2505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c6000848152602001908152602001600020541415611535576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f7461672d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36846040518263ffffffff1660e01b815260040180828152602001915050606060405180830381600087803b1580156115ac57600080fd5b505af11580156115c0573d6000803e3d6000fd5b505050506040513d60608110156115d657600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050505050905060008190506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36866040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b15801561167b57600080fd5b505af115801561168f573d6000803e3d6000fd5b505050506040513d60a08110156116a557600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506000806000808573ffffffffffffffffffffffffffffffffffffffff16634423c5f1896040518263ffffffff1660e01b8152600401808281526020019150506101006040518083038186803b15801561173c57600080fd5b505afa158015611750573d6000803e3d6000fd5b505050506040513d61010081101561176757600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050975050965050505093509350600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f24e23eb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156118bf57600080fd5b505af11580156118d3573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f24e23eb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156119aa57600080fd5b505af11580156119be573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3b22fc4876040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611a4d57600080fd5b505af1158015611a61573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff166326e027f1896040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611ab857600080fd5b505af1158015611acc573d6000803e3d6000fd5b505050506000858281611adb57fe5b049050611afb600e60008c8152602001908152602001600020548261422e565b600e60008c81526020019081526020016000208190555060008412158015611b24575060008112155b611b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f408b8530600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689876040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b158015611c9757600080fd5b505af1158015611cab573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff16898b7fbfa2310a8897203a59922debd0db38279196d8de5050df84608e2bb3e7790f6985888660405180848152602001838152602001828152602001935050505060405180910390a450505050505050505050565b600060085414611d93576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f456e642f7374696c6c2d6c69766500000000000000000000000000000000000081525060200191505060405180910390fd5b6000600b5414611e0b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f456e642f646562742d6e6f742d7a65726f00000000000000000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c25b346600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611eb857600080fd5b505afa158015611ecc573d6000803e3d6000fd5b505050506040513d6020811015611ee257600080fd5b810190808051906020019092919050505014611f66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f456e642f737572706c75732d6e6f742d7a65726f00000000000000000000000081525060200191505060405180910390fd5b611f74600954600a5461422e565b421015611fe9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f456e642f776169742d6e6f742d66696e6973686564000000000000000000000081525060200191505060405180910390fd5b612139600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630dca59c16040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561205657600080fd5b505af115801561206a573d6000803e3d6000fd5b505050506040513d602081101561208057600080fd5b8101908080519060200190929190505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166353d700e56040518163ffffffff1660e01b815260040160206040518083038186803b1580156120f957600080fd5b505afa15801561210d573d6000803e3d6000fd5b505050506040513d602081101561212357600080fd5b8101908080519060200190929190505050614271565b600b819055507f4df15159e645ba7d02cadde0bc937abef5ad0134623c00de50a31750b85978b960405160405180910390a1565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600f6020528060005260406000206000915090505481565b600a5481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414612265576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6060405160405180910390a250565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146123a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60016008541461241b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6e6f742d6c697665000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060088190555042600981905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561249457600080fd5b505af11580156124a8573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561251657600080fd5b505af115801561252a573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561259857600080fd5b505af11580156125ac573d6000803e3d6000fd5b50505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561261a57600080fd5b505af115801561262e573d6000803e3d6000fd5b50505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561269c57600080fd5b505af11580156126b0573d6000803e3d6000fd5b50505050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561271e57600080fd5b505af1158015612732573d6000803e3d6000fd5b50505050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663692450096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156127a057600080fd5b505af11580156127b4573d6000803e3d6000fd5b505050507f2308ed18a14e800c39b86eb6ea43270105955ca385b603b64eca89f98ae8fbda60405160405180910390a1565b6000600b54141561285f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f456e642f646562742d7a65726f0000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b33600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166128d7856b033b2e3c9fd0803ce800000061428b565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561294757600080fd5b505af115801561295b573d6000803e3d6000fd5b505050506129a8601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261422e565b601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f47a981d8cbc0f6df64c9be4ce0a423071a088bd46c549bbd11a4d566e031fe0c826040518082815260200191505060405180910390a250565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c6000848152602001908152602001600020541415612b12576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f7461672d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36846040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b158015612b8957600080fd5b505af1158015612b9d573d6000803e3d6000fd5b505050506040513d60a0811015612bb357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050915050600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632424be5c86866040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b158015612c8757600080fd5b505af1158015612c9b573d6000803e3d6000fd5b505050506040513d6040811015612cb157600080fd5b810190808051906020019092919080519060200190929190505050915091506000612cf8612cdf8386614248565b600c600089815260200190815260200160002054614248565b90506000612d0684836142b7565b9050612d2e600d600089815260200190815260200160002054612d298484614271565b61422e565b600d6000898152602001908152602001600020819055507f80000000000000000000000000000000000000000000000000000000000000008111158015612d9557507f80000000000000000000000000000000000000000000000000000000000000008311155b612e07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f40888830600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686600003896000036040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b158015612f0e57600080fd5b505af1158015612f22573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff16877fa05b7b56166c25efbac063da905f9ea6aa1dc5101f95b43c7a838aace979ab598386604051808381526020018281526020019250505060405180910390a350505050505050565b60106020528060005260406000206000915090505481565b60085481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414613058576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff167f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b60405160405180910390a250565b60006020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060085414613198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f456e642f7374696c6c2d6c69766500000000000000000000000000000000000081525060200191505060405180910390fd5b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632424be5c84336040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b15801561322d57600080fd5b505af1158015613241573d6000803e3d6000fd5b505050506040513d604081101561325757600080fd5b81019080805190602001909291908051906020019092919050505091509150600081146132ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f456e642f6172742d6e6f742d7a65726f0000000000000000000000000000000081525060200191505060405180910390fd5b7f8000000000000000000000000000000000000000000000000000000000000000821115613382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6f766572666c6f77000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bab3f40843333600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760000360006040518763ffffffff1660e01b8152600401808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019650505050505050600060405180830381600087803b15801561348757600080fd5b505af115801561349b573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff16837ff26f2b994a5e16f0960958e62541681f9e3e84d4caac2e487d25e0c75243f0d8846040518082815260200191505060405180910390a3505050565b6011602052816000526040600020602052806000526040600020600091509150505481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146135cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f456e642f6e6f742d617574686f72697a6564000000000000000000000000000081525060200191505060405180910390fd5b600160085414613644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f456e642f6e6f742d6c697665000000000000000000000000000000000000000081525060200191505060405180910390fd5b7f76617400000000000000000000000000000000000000000000000000000000008214156136b25780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139ba565b7f63617400000000000000000000000000000000000000000000000000000000008214156137205780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b9565b7f646f67000000000000000000000000000000000000000000000000000000000082141561378e5780600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b8565b7f766f7700000000000000000000000000000000000000000000000000000000008214156137fc5780600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b7565b7f706f74000000000000000000000000000000000000000000000000000000000082141561386a5780600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b6565b7f73706f74000000000000000000000000000000000000000000000000000000008214156138d85780600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b5565b7f63757265000000000000000000000000000000000000000000000000000000008214156139465780600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506139b4565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f66696c652d756e7265636f676e697a65642d706172616d000000000081525060200191505060405180910390fd5b5b5b5b5b5b5b817f8fef588b5fc1afbf5b2f06c1a435d513f208da2e6704c3d8f0e0ec91167066ba82604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25050565b600e6020528060005260406000206000915090505481565b600060085414613a9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f456e642f7374696c6c2d6c69766500000000000000000000000000000000000081525060200191505060405180910390fd5b6000600c60008381526020019081526020016000205414613b25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f456e642f7461672d696c6b2d616c72656164792d646566696e6564000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36826040518263ffffffff1660e01b81526004018082815260200191505060a060405180830381600087803b158015613b9a57600080fd5b505af1158015613bae573d6000803e3d6000fd5b505050506040513d60a0811015613bc457600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505090919250909150905050600e600083815260200190815260200160002060008291905055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9638d36836040518263ffffffff1660e01b815260040180828152602001915050604080518083038186803b158015613c9657600080fd5b505afa158015613caa573d6000803e3d6000fd5b505050506040513d6040811015613cc057600080fd5b810190808051906020019092919080519060200190929190505050509050613e0d600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663495d32cb6040518163ffffffff1660e01b815260040160206040518083038186803b158015613d4957600080fd5b505afa158015613d5d573d6000803e3d6000fd5b505050506040513d6020811015613d7357600080fd5b81019080805190602001909291905050508273ffffffffffffffffffffffffffffffffffffffff166357de26a46040518163ffffffff1660e01b815260040160206040518083038186803b158015613dca57600080fd5b505afa158015613dde573d6000803e3d6000fd5b505050506040513d6020811015613df457600080fd5b810190808051906020019092919050505060001c6142d1565b600c600084815260200190815260200160002081905550817f4a9efa0a0e3f548761a6924fe06ac5cb94ecdbc08b10d855bbcc04e37c4910db60405160405180910390a25050565b60095481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d6020528060005260406000206000915090505481565b600c6020528060005260406000206000915090505481565b6000600f6000848152602001908152602001600020541415613f3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f456e642f6669782d696c6b2d6e6f742d646566696e656400000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636111be2e833033613f9986600f60008a815260200190815260200160002054614248565b6040518563ffffffff1660e01b8152600401808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b15801561401057600080fd5b505af1158015614024573d6000803e3d6000fd5b505050506140826011600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261422e565b6011600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546011600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156141db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f456e642f696e73756666696369656e742d6261672d62616c616e63650000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16827f888c7c01b06fd8004523e2bc9a274be1feaa9f03579ae5f568061dac078793c9836040518082815260200191505060405180910390a35050565b600081830190508281101561424257600080fd5b92915050565b60006b033b2e3c9fd0803ce8000000614261848461428b565b8161426857fe5b04905092915050565b600082828403915081111561428557600080fd5b92915050565b6000808214806142a857508282838502925082816142a557fe5b04145b6142b157600080fd5b92915050565b6000818311156142c757816142c9565b825b905092915050565b6000816142e684670de0b6b3a764000061428b565b816142ed57fe5b0490509291505056fea2646970667358221220a7265e7b8b16c215cf59231317ccb14298ec846bdc163aa083b83828b391e04064736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5048,
        "contract": "contracts/end.sol:End",
        "label": "wards",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5100,
        "contract": "contracts/end.sol:End",
        "label": "vat",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(VatLike)4921"
      },
      {
        "astId": 5102,
        "contract": "contracts/end.sol:End",
        "label": "cat",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(CatLike)4936"
      },
      {
        "astId": 5104,
        "contract": "contracts/end.sol:End",
        "label": "dog",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(DogLike)4953"
      },
      {
        "astId": 5106,
        "contract": "contracts/end.sol:End",
        "label": "vow",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(VowLike)4961"
      },
      {
        "astId": 5108,
        "contract": "contracts/end.sol:End",
        "label": "pot",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(PotLike)4957"
      },
      {
        "astId": 5110,
        "contract": "contracts/end.sol:End",
        "label": "spot",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(SpotLike)5035"
      },
      {
        "astId": 5112,
        "contract": "contracts/end.sol:End",
        "label": "cure",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(CureLike)5044"
      },
      {
        "astId": 5114,
        "contract": "contracts/end.sol:End",
        "label": "live",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 5116,
        "contract": "contracts/end.sol:End",
        "label": "when",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 5118,
        "contract": "contracts/end.sol:End",
        "label": "wait",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 5120,
        "contract": "contracts/end.sol:End",
        "label": "debt",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 5124,
        "contract": "contracts/end.sol:End",
        "label": "tag",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 5128,
        "contract": "contracts/end.sol:End",
        "label": "gap",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 5132,
        "contract": "contracts/end.sol:End",
        "label": "Art",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 5136,
        "contract": "contracts/end.sol:End",
        "label": "fix",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 5140,
        "contract": "contracts/end.sol:End",
        "label": "bag",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5146,
        "contract": "contracts/end.sol:End",
        "label": "out",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(CatLike)4936": {
        "encoding": "inplace",
        "label": "contract CatLike",
        "numberOfBytes": "20"
      },
      "t_contract(CureLike)5044": {
        "encoding": "inplace",
        "label": "contract CureLike",
        "numberOfBytes": "20"
      },
      "t_contract(DogLike)4953": {
        "encoding": "inplace",
        "label": "contract DogLike",
        "numberOfBytes": "20"
      },
      "t_contract(PotLike)4957": {
        "encoding": "inplace",
        "label": "contract PotLike",
        "numberOfBytes": "20"
      },
      "t_contract(SpotLike)5035": {
        "encoding": "inplace",
        "label": "contract SpotLike",
        "numberOfBytes": "20"
      },
      "t_contract(VatLike)4921": {
        "encoding": "inplace",
        "label": "contract VatLike",
        "numberOfBytes": "20"
      },
      "t_contract(VowLike)4961": {
        "encoding": "inplace",
        "label": "contract VowLike",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}